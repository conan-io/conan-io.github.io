---
layout: post
comments: false
title: "Conan 1.52: Build system improvements: MSBuild, CMakeToolchain, continue working in easing migration to 2.0, new export_conandata_patches tool, new build folder argument for cmake_layout."
meta_title: "Version 1.52 of Conan C++ Package Manager is Released" 
meta_description: "Conan 1.52: Build system improvements: MSBuild, CMakeToolchain, continue working in easing migration to 2.0, new export_conandata_patches tool and much more"
---

<script type="application/ld+json">
{ "@context": "https://schema.org", 
 "@type": "TechArticle",
 "headline": "Version 1.52 of Conan C++ Package Manager is Released",
 "alternativeHeadline": "Learn all about the new 1.52 Conan C/C++ package manager version",
 "image": "https://docs.conan.io/en/latest/_images/frogarian.png",
 "author": "Conan Team", 
 "genre": "C/C++", 
 "keywords": "c c++ package manager conan release", 
 "publisher": {
    "@type": "Organization",
    "name": "Conan.io",
    "logo": {
      "@type": "ImageObject",
      "url": "https://media.jfrog.com/wp-content/uploads/2017/07/20134853/conan-logo-text.svg"
    }
},
 "datePublished": "2022-07-14",
 "description": "Build system improvements: MSBuild, CMakeToolchain, continue working in easing migration to 2.0, new export_conandata_patches tool, new build folder argument for cmake_layout.",
 }
</script>


We are pleased to announce that Conan 1.52 has been released and brings some significant
new features and bug fixes. First, this release comes with some improvements in some
important [tools](https://docs.conan.io/en/latest/reference/conanfile/tools.html) such as
[MSBuild](https://docs.conan.io/en/latest/reference/conanfile/tools/microsoft.html#msbuild)
or
[CMakeToolchain](https://docs.conan.io/en/latest/reference/conanfile/tools/cmake/cmaketoolchain.html).
Also, we continue the work of easing the migration to Conan 2.0 with features like
supporting installing remotes.json in 1.X or making the
[to_apple_arch](https://docs.conan.io/en/latest/reference/conanfile/tools/apple.html#to-apple-arch)
tool public. We added a new
[export_conandata_patches](https://docs.conan.io/en/latest/reference/conanfile/tools/files/patches.html#conan-tools-files-export-conandata-patches)
tool and a new argument for
[cmake_layout](https://docs.conan.io/en/latest/reference/conanfile/tools/cmake/cmake_layout.html)
to define the build folder.

Also, it's worth noting that [Conan
2.0-beta3](https://github.com/conan-io/conan/releases/tag/2.0.0-beta3) was released this
month and it also bring several significant new features.

- Build system improvements: PkgConfigDeps, MSBuild, CMakeToolchain
- Many 2.0 migrate tools: is_msvc, remotes.json, traits in self.requires(), git.clone(args), to_apple_arch
- New export_conandata_patches, cmake_layout(build_folder)
Feature: Add BUILD_TESTING=OFF to CMakeToolchain presets if tools.build:skip_test. #11935 . Docs here
Feature: Allow traits in self.requires() for 2.0 compatibility. #11934 . Docs here
Feature: Make the version of the Conan client available under conan and make it a Version object so it can be compared. #11928 . Docs here
Feature: Implement cmake_layout(..., build_folder="build) build folder argument. #11889 . Docs here
Feature: Defines the PACKAGE_ROOT_<package> variable in XcodeDeps generated files. #11818 . Docs here
Feature: Added clang 16 to settings. #11780
Beta3 -> 12 de septiembre --> talk about 1 feature like the custom commands? Link the graph model video?


## Improvements in MSBuild and CMakeToolchain

- Support ``targets`` argument in MSBuild. With this argument you can pass the specific
  target you want to build. You can use it in your recipes like:

```python
...
class MylibConan(ConanFile):
    ...
    def build(self):
        msbuild = MSBuild(self)
        msbuild.build("MyProject.sln", targets=["mytarget"])
```

And the MSBuild *build()* method will internally add the ``/target=mytarget`` argument to
the call.

-  Added support for
   [BUILD_TESTING](https://cmake.org/cmake/help/latest/command/enable_testing.html) CMake
   variable in CMakeToolchain. This variable is added to the *CMakePresets.json* file
   generated by the toolchain and it will set the variable to ``OFF``, when configuration
   ``tools.build:skip_test`` is true.


## Continue working in easing migration to Conan 2.0

As a continuation of the effort to make migration to Conan 2.0 easier we added some
features to Conan 1.52 like:

- Support for *remotes.json* in ``conan config install`` command. This file, that replaces the 1.X *remotes.txt* can be installed in the local cache with the ``conan config install`` command. Please, note that **only one of remotes.json or remotes.txt** should be  installed.

- Support for traits in 1.X ``self.requires()``. One of the new features in Conan 2.0 is
  the support for
  [traits](https://github.com/conan-io/tribe/blob/main/design/026-requirements_traits.md)
  to enhace the Conan dependency model. As there are recipes that will take advantage of
  the traits model we have enabled the posbility to set those traits arguments in Conan
  1.X as well. Be aware that this arguments will not have any effect in Conan 1.X but will
  not make the recipe throw an error enabling the migration.

- Add
  [conan.tools.apple.to_apple_arch](https://docs.conan.io/en/latest/reference/conanfile/tools/apple.html#to-apple-arch)
  tool. This tool is useful to convert between Conan-style arch setting and the format
  understood by the Apple build tools (*x86* to *i386*, *armv8* to *arm64*, etc.).

-  Add ability to pass additional arguments to conan.tools.scm.Git.clone()


Please, do not forget to check our [migration to Conan 2.0
guide](https://docs.conan.io/en/latest/conan_v2.html) in the Conan documentation.


##  new export_conandata_patches tool


##Â new build folder argument for cmake_layout


## Conan 2.0-beta3 released

We would like to talk a bit about Conan 2.0. As you may know, the first Conan 2.0 beta is
already out. You can install it using *pip*:

```bash
$ pip install conan --pre
```

We have done an effort lately to complete the [documentation for the new Conan major
version](https://docs.conan.io/en/2.0/). Although the documentation for 2.0 is still in
"draft" state, some sections are practically complete. There are some differences in how
the Conan 1.X and Conan 2.0 documentation is structured. Let's see the most relevant
sections of the documentation for Conan 2.0:

---

<br>

Besides the items listed above, there were some minor bug fixes you may wish to read
about. If so please refer to the
[changelog](https://docs.conan.io/en/latest/changelog.html#aug-2022) for the complete
list.

We hope you enjoy this release and look forward to [your
feedback](https://github.com/conan-io/conan/issues).
