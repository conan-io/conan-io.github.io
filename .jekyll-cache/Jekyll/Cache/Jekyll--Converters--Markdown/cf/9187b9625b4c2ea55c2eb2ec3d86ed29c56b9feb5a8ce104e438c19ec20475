I"ç<p>Conan 1.4 release is out with some outstanding features. Just after very productive talks at <a href="https://swampup.jfrog.com/">SwampUp 2018</a> and
feedback from the community we got our hands dirty and came up with some useful features in this release.</p>

<h2 id="scm-integration-for-git-repositories">SCM integration for git repositories</h2>

<p>Many advanced users came across the issue of capturing the commit of the repository of the sources in export time when
<a href="https://docs.conan.io/en/latest/creating_packages/package_repo.html#capturing-the-remote-and-commit-from-git-scm-experimental">recipe and sources were in the same repo</a>.</p>

<p>With the new <code class="highlighter-rouge">scm</code> experimental attribute this can be done in an easy way and it could be useful to download sources when
<a href="https://docs.conan.io/en/latest/creating_packages/external_repo.html#recipe-and-sources-in-a-different-repo">recipe and sources are in different repos</a>
too. Currently this only supports git as SCM.</p>

<p>This feature has been released as experimental, so we want to hear your feedback! Please check the documentation and report to the
<a href="https://github.com/conan-io/conan/issues">Conan issue tracker</a>.</p>

<h2 id="new-cmake_paths-and-cmake_find_package-generators">New cmake_paths and cmake_find_package generators</h2>

<p>After all the feedback collected regarding CMake integration, we focused the development with the goal of providing a transparent way to
integrate CMake relying on <code class="highlighter-rouge">find_package()</code>, especially useful for Conan package consumers.</p>

<p>This led to two different generators:</p>

<ul>
  <li>
    <p><code class="highlighter-rouge">cmake_find_package</code> generator creates one <em>Find&lt;package_name&gt;.cmake</em> file for each dependency. This will make each find_package in you
<em>CMakeLists.txt</em> point to the dependency solved by Conan after a <code class="highlighter-rouge">conan install</code>.
<a href="https://docs.conan.io/en/latest/integrations/cmake/cmake_find_package_generator.html#cmake-find-package-generator">Read more</a>.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">cmake_paths</code> generator creates a <em>conan_paths.cmake</em> file with <code class="highlighter-rouge">CMAKE_MODULE_PATH</code> and <code class="highlighter-rouge">CMAKE_PREFIX_PATH</code> variables adjusted to
the dependencies folders. This also allow users to integrate Conan without modifying the <em>CMakeLists.txt</em>:
<code class="highlighter-rouge">cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake</code>.
<a href="https://docs.conan.io/en/latest/integrations/cmake/cmake_paths_generator.html#cmake-paths-generator">Read more</a>.</p>
  </li>
</ul>

<p>Stay tuned to know more about how to use both generators!</p>

<h2 id="better-visual-studio-environment-management">Better Visual Studio environment management</h2>

<p>There has been many minor issues related to <code class="highlighter-rouge">vcvarsall</code> in this release:</p>

<ul>
  <li>Added new parameters to <code class="highlighter-rouge">tools.vcvars_command()</code> to let users choose SDK version and compiler toolset.</li>
  <li>Improved robustness of <code class="highlighter-rouge">tools.vcvars_dict()</code> when reading <code class="highlighter-rouge">vcvarsall</code> output.</li>
  <li><code class="highlighter-rouge">tools.vcvars_dict()</code> now sets only the environment variables set by <code class="highlighter-rouge">vcvarsall</code>.</li>
  <li><code class="highlighter-rouge">virtualbuildenv</code> generator now includes the needed variables from <code class="highlighter-rouge">vcvarsall</code> in <em>activate_build.bat/.ps1</em> files.</li>
</ul>

<h2 id="other-things-going-on">Other things going on!</h2>

<p>There are other useful features that will make your live easier:</p>

<ul>
  <li>New tools including XCRun wrapper for easier development of packages targeting Apple devices (Thanks to the contributors!).</li>
  <li>In recipes: The <code class="highlighter-rouge">fPIC</code> flag is auto-managed in the Autotools build helper</li>
  <li>In CI: There is a new <code class="highlighter-rouge">--json</code> argument to output the results of the <code class="highlighter-rouge">conan search</code> command.</li>
  <li>We also added support for GCC 8 and Clang 7 as well as c++ language standard c++20.</li>
</ul>

<h2 id="preparing-the-future">Preparing the future</h2>

<p>Many of these release changes are internal. Big improvements are currently under development to enable bringing new features to Conan such
as:</p>

<ul>
  <li>Refactor of the graph builder to improve build-requires inclusion.</li>
  <li>Better information about the dependency graph, and improving reproducibility.</li>
  <li>Parallelize downloads of packages.</li>
  <li>Mix binaries of the same recipe from different remotes.</li>
  <li>Conan Workspace (a.k.a. conan-project) to edit Conan packages and develop library dependencies will be coming finally in next 1.4.1
release!</li>
</ul>
:ET